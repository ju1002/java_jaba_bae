package com.kh.first; // 패키지 선언부:현재 클래스의 위치
  /*
   *주석(Comments)
   * 
   *주석은 프로그램을 실행하는데 있어 아무런 영향을 끼치진 않음!
   *코드를 작성한 후 작성한 코드를 이해하기 쉽도록 하기 위함
   *주석을 달아놓을면 유지보수 시간을 줄일 수 있음 
   * 주석의 종류(3가지/오늘은 2가지)
   *1. 한 줄 주석(//): 주석 내용이 한 줄 일때 사용
   *2.여러 줄 주석("/*~~~*") 여러 줄의 주석이 필요할 때 사용
   *범위 안에 모든 내용이 주석으로 간주
   */
/*패키지(package)
 * 하나의 패키지 안에 여러 개의 클래스들이 존재할 수 있음
 * 하나의 패키지 안에 동일한 이름의 클래스는 존재할 수 없음
 * 프로그램을 만들 때 모든 클래스들을 동일한 패키지에 생성하여 관리하면 복잡하기 때문에
 * 클래스들을 용도에 맞게 구분해서 패키지에 보관하는 것을 권장
 * 패키지는 적어도 세단계 이상으로 만들어주는 것을 권장
 * ex) com.kh.first
 * com.(회사이름).(프로젝트이름,팀이름,카테고리 이름)
 */



public class FistClass {// 클래스 이름을 FirstClass라고 지웠음  {}중괄호/Scope,블록


//Scope {}은 중괄호로 묶은 부분을 이야기하면,복합문을 구성하는 요소이다!
	// 즉, 종속된 문장이 다수 개일 때 {열고 }닫는다.
	// main method: 프로그램의 시작점, 프로그램 당 1개는 가지고 있어야함	
	
	public static void main(String[] args) {
		
	
	System.out.println("Hello World!");
	
/*method: 하나의 클래스 안에 여러개의 메소드가 존재할 수 있음
 * 메소드 안의 구문을 수행하고  싶다면 반드시 "호출" 해야 한다
 * 공백문자는 빈 칸 탭문자 빈 줄 등이 있으면
 * 이런한 공백문자들은 소스코드를 보기 좋게 하고
 * 알아보기 쉽게 만드는데 사용된다
 * 즉, 프로그램을 구조화된 형태로 표현는데 유용한다.
 */
	
	
	
	printMyName();
	
	System.out.print("으아아아앙"); // 얘는 출력문 
	//  논리적인 한 문장이 끝날 때 반드시 세미콜론을 붙임!
	
	printMyName();
	
	
	}
	
	
	public static void printMyName() {	

	System.out.print("안녕하세요.제 이름은 배주영입니다");
	
	}
}
